# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '944c84a8-3a90-4dfe-8eef-bbef96a71b6a'
  imageRepository: 'sahilcmddjangoapp'
  containerRegistry: 'djangoappacr-cge6gyhjgydubtef.azurecr.io'
  dockerfilePath: '# Use Python 3.11 slim image FROM python:3.11-slim  # Set environment variables ENV PYTHONDONTWRITEBYTECODE=1 ENV PYTHONUNBUFFERED=1 ENV DEBUG=False  # Set working directory WORKDIR /app  # Install dependencies COPY requirements.txt . RUN pip install --no-cache-dir -r requirements.txt  # Copy project COPY . .  # Create directory for SQLite database RUN mkdir -p /data &amp;&amp; chown -R 1000:1000 /data  # Collect static files RUN python manage.py collectstatic --noinput  # Create initial database if it doesn&#39;t exist RUN python manage.py migrate  # Expose port EXPOSE 8000  # Run gunicorn CMD [&quot;gunicorn&quot;, &quot;--bind&quot;, &quot;0.0.0.0:8000&quot;, &quot;djangoapp.wsgi:application&quot;]'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
