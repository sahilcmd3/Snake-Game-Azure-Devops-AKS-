# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'djangoapp-acr-connection'  # Replace with your actual service connection name
  imageRepository: 'djangoaksapp'
  containerRegistry: 'djangoappacr-cge6gyhjgydubtef.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'djangoappacrf415-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    # Alternative: Use Azure CLI to build and push
    - task: AzureCLI@2
      displayName: 'Build and push Docker image using Azure CLI'
      inputs:
        azureSubscription: 'your-azure-subscription-service-connection'  # Replace with your Azure subscription service connection
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          # Login to ACR
          az acr login --name djangoappacr-cge6gyhjgydubtef
          
          # Build the image
          docker build -t $(containerRegistry)/$(imageRepository):$(tag) .
          
          # Push the image
          docker push $(containerRegistry)/$(imageRepository):$(tag)
          
          echo "Image pushed: $(containerRegistry)/$(imageRepository):$(tag)"

    - upload: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'djangoaksapp-1687.default'
    strategy:
      runOnce:
        deploy:
          steps:
          # Alternative: Create image pull secret using kubectl
          - task: AzureCLI@2
            displayName: 'Create imagePullSecret and deploy'
            inputs:
              azureSubscription: 'your-azure-subscription-service-connection'  # Replace with your Azure subscription service connection
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                # Get AKS credentials
                az aks get-credentials --resource-group your-resource-group --name your-aks-cluster --overwrite-existing
                
                # Create image pull secret
                kubectl create secret docker-registry $(imagePullSecret) \
                  --docker-server=$(containerRegistry) \
                  --docker-username=$(az acr credential show --name djangoappacr-cge6gyhjgydubtef --query username -o tsv) \
                  --docker-password=$(az acr credential show --name djangoappacr-cge6gyhjgydubtef --query "passwords[0].value" -o tsv) \
                  --dry-run=client -o yaml | kubectl apply -f -

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              kubernetesServiceConnection: 'your-aks-service-connection'  # Replace with your AKS service connection
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)